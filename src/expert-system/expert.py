from experta import *

class InreferenceEngine(KnowledgeEngine):
    language = ''
    initialFacts = []

    @DefFacts()
    def initial(self):
        for fact in self.initialFacts:
            yield Fact(fact)

    @Rule(OR(
        AND(
            NOT(Fact('job')),
            NOT(Fact('crossplatform')),
            NOT(Fact('freelance')),
            NOT(Fact('stats')),
            NOT(Fact('viz')),
            NOT(Fact('invested')),
            NOT(Fact('simple')),
            NOT(Fact('community')),
            NOT(Fact('versatile')),
            NOT(Fact('wide')),
            NOT(Fact('speedy')),
            NOT(Fact('trendy')),
            NOT(Fact('mature')),
            NOT(Fact('patient')),
            NOT(Fact('notsure')),
            Fact('skill'),
            Fact('mobile'),
            Fact('web')
        ),
        AND(
            NOT(Fact('job')),
            NOT(Fact('crossplatform')),
            NOT(Fact('freelance')),
            NOT(Fact('stats')),
            NOT(Fact('viz')),
            NOT(Fact('invested')),
            NOT(Fact('simple')),
            NOT(Fact('web')),
            NOT(Fact('versatile')),
            NOT(Fact('skill')),
            NOT(Fact('speedy')),
            NOT(Fact('mobile')),
            NOT(Fact('mature')),
            NOT(Fact('patient')),
            NOT(Fact('notsure')),
            Fact('wide'),
            Fact('trendy'),
            Fact('community'),
        ),
        AND(
            NOT(Fact('skill')),
            NOT(Fact('crossplatform')),
            NOT(Fact('mobile')),
            NOT(Fact('web')),
            NOT(Fact('job')),
            NOT(Fact('freelance')),
            NOT(Fact('stats')),
            NOT(Fact('viz')),
            NOT(Fact('invested')),
            NOT(Fact('simple')),
            NOT(Fact('community')),
            NOT(Fact('trendy')),
            NOT(Fact('mature')),
            NOT(Fact('patient')),
            NOT(Fact('notsure')),
            Fact('wide'),
            Fact('speedy'),
            Fact('versatile')
        ),
        AND(
            NOT(Fact('mobile')),
            NOT(Fact('crossplatform')),
            NOT(Fact('job')),
            NOT(Fact('freelance')),
            NOT(Fact('stats')),
            NOT(Fact('viz')),
            NOT(Fact('invested')),
            NOT(Fact('simple')),
            NOT(Fact('community')),
            NOT(Fact('versatile')),
            NOT(Fact('wide')),
            NOT(Fact('speedy')),
            NOT(Fact('trendy')),
            NOT(Fact('mature')),
            NOT(Fact('patient')),
            Fact('notsure'),
            Fact('skill'),
            Fact('web')
        )
    ))
    def javascript(self):
        self.declare(Fact(language='javascript'))

    @Rule(OR(
        AND(
            NOT(Fact('job')),
            NOT(Fact('crossplatform')),
            NOT(Fact('freelance')),
            NOT(Fact('invested')),
            NOT(Fact('simple')),
            NOT(Fact('community')),
            NOT(Fact('versatile')),
            NOT(Fact('wide')),
            NOT(Fact('speedy')),
            NOT(Fact('trendy')),
            NOT(Fact('mature')),
            NOT(Fact('patient')),
            NOT(Fact('notsure')),
            NOT(Fact('skill')),
            Fact('mobile'),
            Fact('web'),
            Fact('stats'),
            Fact('viz')
        ),
        AND(
            NOT(Fact('invested')),
            NOT(Fact('crossplatform')),
            NOT(Fact('community')),
            NOT(Fact('versatile')),
            NOT(Fact('wide')),
            NOT(Fact('speedy')),
            NOT(Fact('trendy')),
            NOT(Fact('mature')),
            NOT(Fact('patient')),
            NOT(Fact('notsure')),
            NOT(Fact('skill')),
            NOT(Fact('web')),
            NOT(Fact('mobile')),
            NOT(Fact('stats')),
            NOT(Fact('viz')),
            Fact('job'),
            Fact('freelance'),
            Fact('simple'),
        ),
        AND(
            NOT(Fact('invested')),
            NOT(Fact('crossplatform')),
            NOT(Fact('community')),
            NOT(Fact('versatile')),
            NOT(Fact('speedy')),
            NOT(Fact('mature')),
            NOT(Fact('patient')),
            NOT(Fact('notsure')),
            NOT(Fact('skill')),
            NOT(Fact('web')),
            NOT(Fact('mobile')),
            NOT(Fact('stats')),
            NOT(Fact('viz')),
            NOT(Fact('job')),
            NOT(Fact('freelance')),
            Fact('wide'),
            Fact('simple'),
            Fact('trendy')
        ),
        AND(
            NOT(Fact('invested')),
            NOT(Fact('crossplatform')),
            NOT(Fact('community')),
            NOT(Fact('versatile')),
            NOT(Fact('speedy')),
            NOT(Fact('mature')),
            NOT(Fact('patient')),
            NOT(Fact('notsure')),
            NOT(Fact('skill')),
            NOT(Fact('web')),
            NOT(Fact('mobile')),
            NOT(Fact('job')),
            NOT(Fact('freelance')),
            NOT(Fact('trendy')),
            NOT(Fact('wide')),
            Fact('viz'),
            Fact('stats'),
            Fact('simple')
        ),
        AND(
            NOT(Fact('invested')),
            NOT(Fact('crossplatform')),
            NOT(Fact('community')),
            NOT(Fact('versatile')),
            NOT(Fact('speedy')),
            NOT(Fact('mature')),
            NOT(Fact('patient')),
            NOT(Fact('web')),
            NOT(Fact('mobile')),
            NOT(Fact('job')),
            NOT(Fact('freelance')),
            NOT(Fact('wide')),
            NOT(Fact('trendy')),
            NOT(Fact('viz')),
            NOT(Fact('stats')),
            Fact('notsure'),
            Fact('skill'),
            Fact('simple')
        )
    ))
    def python(self):
        self.declare(Fact(language='python'))

    @Rule(
        NOT(Fact('versatile')),
        NOT(Fact('crossplatform')),
        NOT(Fact('freelance')),
        NOT(Fact('trendy')),
        NOT(Fact('stats')),
        NOT(Fact('notsure')),
        NOT(Fact('skisimplell')),
        NOT(Fact('mobile')),
        NOT(Fact('web')),
        NOT(Fact('viz')),
        Fact('mature'),
        Fact('patient'),
        Fact('invested'),
        OR(
            Fact('speedy'),
            Fact('skill'),
            Fact('community'),
            Fact('wide'),
            Fact('job')
        )
    )
    def clang(self):
        self.declare(Fact(language='c'))

    @Rule(OR(
        AND(
            NOT(Fact('versatile')),
            NOT(Fact('crossplatform')),
            NOT(Fact('freelance')),
            NOT(Fact('trendy')),
            NOT(Fact('stats')),
            NOT(Fact('notsure')),
            NOT(Fact('skill')),
            NOT(Fact('simple')),
            NOT(Fact('job')),
            NOT(Fact('viz')),
            NOT(Fact('patient')),
            NOT(Fact('invested')),
            NOT(Fact('speedy')),
            NOT(Fact('skill')),
            NOT(Fact('mobile')),
            Fact('web'),
            Fact('wide'),
            OR(Fact('mature'), Fact('community'))
        ),
        AND(
            NOT(Fact('versatile')),
            NOT(Fact('crossplatform')),
            NOT(Fact('trendy')),
            NOT(Fact('stats')),
            NOT(Fact('notsure')),
            NOT(Fact('simple')),
            NOT(Fact('job')),
            NOT(Fact('viz')),
            NOT(Fact('patient')),
            NOT(Fact('invested')),
            NOT(Fact('speedy')),
            NOT(Fact('mature')),
            NOT(Fact('wide')),
            NOT(Fact('community')),
            Fact('skill'),
            Fact('web'),
            Fact('freelance')
        ),
        AND(
            NOT(Fact('versatile')),
            NOT(Fact('crossplatform')),
            NOT(Fact('trendy')),
            NOT(Fact('stats')),
            NOT(Fact('notsure')),
            NOT(Fact('viz')),
            NOT(Fact('patient')),
            NOT(Fact('invested')),
            NOT(Fact('speedy')),
            NOT(Fact('mature')),
            NOT(Fact('wide')),
            NOT(Fact('skill')),
            NOT(Fact('community')),
            NOT(Fact('mobile')),
            Fact('web'),
            Fact('simple'),
            OR(Fact('job'), Fact('freelance'))
        )
    ))
    def php(self):
        self.declare(Fact(language='php'))

    @Rule(OR(
        AND(
            NOT(Fact('versatile')),
            NOT(Fact('crossplatform')),
            NOT(Fact('trendy')),
            NOT(Fact('stats')),
            NOT(Fact('notsure')),
            NOT(Fact('viz')),
            NOT(Fact('speedy')),
            NOT(Fact('mature')),
            NOT(Fact('wide')),
            NOT(Fact('skill')),
            NOT(Fact('community')),
            NOT(Fact('mobile')),
            NOT(Fact('freelance')),
            NOT(Fact('web')),
            NOT(Fact('simple')),
            Fact('patient'),
            Fact('invested'),
            Fact('job')
        ),
        AND(
            NOT(Fact('trendy')),
            NOT(Fact('crossplatform')),
            NOT(Fact('stats')),
            NOT(Fact('notsure')),
            NOT(Fact('viz')),
            NOT(Fact('mature')),
            NOT(Fact('wide')),
            NOT(Fact('skill')),
            NOT(Fact('job')),
            NOT(Fact('mobile')),
            NOT(Fact('freelance')),
            NOT(Fact('web')),
            NOT(Fact('simple')),
            NOT(Fact('invested')),
            Fact('community'),
            Fact('versatile'),
            Fact('speedy'),
            Fact('patient')
        ),
        AND(
            NOT(Fact('trendy')),
            NOT(Fact('stats')),
            NOT(Fact('notsure')),
            NOT(Fact('skill')),
            NOT(Fact('viz')),
            NOT(Fact('wide')),
            NOT(Fact('job')),
            NOT(Fact('mobile')),
            NOT(Fact('freelance')),
            NOT(Fact('web')),
            NOT(Fact('simple')),
            NOT(Fact('invested')),
            NOT(Fact('versatile')),
            NOT(Fact('speedy')),
            NOT(Fact('patient')),
            Fact('crossplatform'),
            Fact('mature'),
            Fact('community')
        ),
        AND(
            NOT(Fact('trendy')),
            NOT(Fact('stats')),
            NOT(Fact('notsure')),
            NOT(Fact('viz')),
            NOT(Fact('wide')),
            NOT(Fact('skill')),
            NOT(Fact('job')),
            NOT(Fact('freelance')),
            NOT(Fact('web')),
            NOT(Fact('simple')),
            NOT(Fact('versatile')),
            NOT(Fact('speedy')),
            NOT(Fact('patient')),
            NOT(Fact('community')),
            Fact('mobile'),
            Fact('mature'),
            Fact('crossplatform'),
            Fact('invested')
        ),
        AND(
            NOT(Fact('trendy')),
            NOT(Fact('stats')),
            NOT(Fact('notsure')),
            NOT(Fact('viz')),
            NOT(Fact('skill')),
            NOT(Fact('job')),
            NOT(Fact('freelance')),
            NOT(Fact('web')),
            NOT(Fact('simple')),
            NOT(Fact('versatile')),
            NOT(Fact('speedy')),
            NOT(Fact('patient')),
            NOT(Fact('crossplatform')),
            NOT(Fact('mature')),
            NOT(Fact('invested')),
            Fact('mobile'),
            Fact('wide'),
            Fact('community')
        ),
        AND(
            NOT(Fact('trendy')),
            NOT(Fact('stats')),
            NOT(Fact('notsure')),
            NOT(Fact('viz')),
            NOT(Fact('skill')),
            NOT(Fact('web')),
            NOT(Fact('simple')),
            NOT(Fact('versatile')),
            NOT(Fact('patient')),
            NOT(Fact('crossplatform')),
            NOT(Fact('invested')),
            Fact('mobile'),
            Fact('freelance'),
            Fact('job'),
            Fact('wide'),
            Fact('community'), Fact('mature'), Fact('speedy')
        ),
        AND(
            NOT(Fact('trendy')),
            NOT(Fact('stats')),
            NOT(Fact('notsure')),
            NOT(Fact('viz')),
            NOT(Fact('skill')),
            NOT(Fact('web')),
            NOT(Fact('simple')),
            NOT(Fact('versatile')),
            NOT(Fact('patient')),
            NOT(Fact('crossplatform')),
            NOT(Fact('invested')),
            NOT(Fact('freelance')),
            NOT(Fact('wide')),
            NOT(Fact('community')),
            Fact('mobile'),
            Fact('job'),
            Fact('mature'),
            Fact('speedy')
        )
    ))
    def java(self):
        self.declare(Fact(language='java'))

    @Rule(OR(
        AND(
            NOT(Fact('trendy')),
            NOT(Fact('crossplatform')),
            NOT(Fact('simple')),
            NOT(Fact('stats')),
            NOT(Fact('viz')),
            NOT(Fact('web')),
            NOT(Fact('versatile')),
            NOT(Fact('speedy')),
            NOT(Fact('patient')),
            NOT(Fact('community')),
            NOT(Fact('wide')),
            NOT(Fact('mature')),
            Fact('skill'),
            Fact('mobile'),
            OR(Fact('freelance'), Fact('job'), Fact('notsure'))
        ),
        AND(
            NOT(Fact('crossplatform')),
            NOT(Fact('notsure')),
            NOT(Fact('simple')),
            NOT(Fact('stats')),
            NOT(Fact('viz')),
            NOT(Fact('web')),
            NOT(Fact('versatile')),
            NOT(Fact('skill')),
            NOT(Fact('freelance')),
            NOT(Fact('job')),
            NOT(Fact('patient')),
            NOT(Fact('invested')),
            NOT(Fact('community')),
            NOT(Fact('wide')),
            NOT(Fact('mature')),
            Fact('mobile'),
            Fact('trendy'),
            Fact('speedy'),
        ),
        AND(
            NOT(Fact('crossplatform')),
            NOT(Fact('notsure')),
            NOT(Fact('stats')),
            NOT(Fact('viz')),
            NOT(Fact('web')),
            NOT(Fact('skill')),
            NOT(Fact('freelance')),
            NOT(Fact('job')),
            NOT(Fact('patient')),
            NOT(Fact('invested')),
            NOT(Fact('community')),
            NOT(Fact('wide')),
            NOT(Fact('mature')),
            NOT(Fact('speedy')),
            NOT(Fact('trendy')),
            Fact('mobile'),
            Fact('simple'),
            OR(Fact('versatile'), Fact('crossplatform'))
        )
    ))
    def dart(self):
        self.declare(Fact(language='dart'))

    @Rule(OR(
        AND(
            NOT(Fact('trendy')),
            NOT(Fact('skill')),
            NOT(Fact('crossplatform')),
            NOT(Fact('freelance')),
            NOT(Fact('notsure')),
            NOT(Fact('simple')),
            NOT(Fact('stats')),
            NOT(Fact('viz')),
            NOT(Fact('web')),
            NOT(Fact('versatile')),
            NOT(Fact('speedy')),
            NOT(Fact('patient')),
            NOT(Fact('community')),
            NOT(Fact('job')),
            Fact('mobile'),
            Fact('invested'),
            OR(Fact('wide'), Fact('mature'))
        ),
        AND(
            NOT(Fact('trendy')),
            NOT(Fact('skill')),
            NOT(Fact('crossplatform')),
            NOT(Fact('freelance')),
            NOT(Fact('notsure')),
            NOT(Fact('simple')),
            NOT(Fact('stats')),
            NOT(Fact('viz')),
            NOT(Fact('wide')),
            NOT(Fact('mature')),
            NOT(Fact('web')),
            NOT(Fact('versatile')),
            NOT(Fact('speedy')),
            NOT(Fact('patient')),
            NOT(Fact('invested')),
            Fact('mobile'),
            Fact('community'),
            Fact('job')
        ),
        AND(
            NOT(Fact('skill')),
            NOT(Fact('crossplatform')),
            NOT(Fact('freelance')),
            NOT(Fact('job')),
            NOT(Fact('notsure')),
            NOT(Fact('simple')),
            NOT(Fact('stats')),
            NOT(Fact('viz')),
            NOT(Fact('wide')),
            NOT(Fact('mature')),
            NOT(Fact('web')),
            NOT(Fact('versatile')),
            NOT(Fact('community')),
            NOT(Fact('trendy')),
            Fact('mobile'),
            Fact('speedy'),
            Fact('patient'),
            Fact('invested')
        )
    ))
    def swift(self):
        self.declare(Fact(language='swift'))

    @Rule(OR(
        AND(
            NOT(Fact('trendy')),
            NOT(Fact('skill')),
            NOT(Fact('patient')),
            NOT(Fact('crossplatform')),
            NOT(Fact('freelance')),
            NOT(Fact('mobile')),
            NOT(Fact('job')),
            NOT(Fact('notsure')),
            NOT(Fact('simple')),
            NOT(Fact('stats')),
            NOT(Fact('viz')),
            NOT(Fact('invested')),
            NOT(Fact('wide')),
            NOT(Fact('mature')),
            Fact('web'),
            Fact('community'),
            Fact('versatile'),
            Fact('speedy')
        ),
        AND(
            NOT(Fact('trendy')),
            NOT(Fact('skill')),
            NOT(Fact('versatile')),
            NOT(Fact('patient')),
            NOT(Fact('crossplatform')),
            NOT(Fact('freelance')),
            NOT(Fact('mobile')),
            NOT(Fact('job')),
            NOT(Fact('notsure')),
            NOT(Fact('simple')),
            NOT(Fact('community')),
            NOT(Fact('stats')),
            NOT(Fact('viz')),
            Fact('web'),
            Fact('invested'),
            Fact('speedy'),
            Fact('wide'),
            Fact('mature')
        )
    ))
    def ruby(self):
        self.declare(Fact(language='ruby'))

    @Rule(
        NOT(Fact('trendy')),
        NOT(Fact('stats')),
        NOT(Fact('skill')),
        NOT(Fact('viz')),
        NOT(Fact('web')),
        NOT(Fact('versatile')),
        NOT(Fact('patient')),
        NOT(Fact('crossplatform')),
        NOT(Fact('invested')),
        NOT(Fact('freelance')),
        NOT(Fact('wide')),
        NOT(Fact('community')),
        NOT(Fact('mobile')),
        NOT(Fact('job')),
        NOT(Fact('mature')),
        NOT(Fact('speedy')),
        Fact('notsure'),
        Fact('simple')
    )
    def scratch(self):
        self.declare(Fact(language='scratch'))

    @Rule(
        NOT(Fact('trendy')),
        NOT(Fact('skill')),
        NOT(Fact('web')),
        NOT(Fact('versatile')),
        NOT(Fact('patient')),
        NOT(Fact('crossplatform')),
        NOT(Fact('invested')),
        NOT(Fact('freelance')),
        NOT(Fact('mobile')),
        NOT(Fact('job')),
        NOT(Fact('mature')),
        NOT(Fact('notsure')),
        NOT(Fact('simple')),
        Fact('viz'),
        Fact('stats'),
        OR(Fact('speedy'), Fact('community'), Fact('wide'))
    )
    def R(self):
        self.declare(Fact(language='R'))

    @Rule(NOT(Fact(language=W())), salience=-1)
    def unmatched(self):
        self.declare(Fact(language='python'))

    @Rule(Fact(language=MATCH.language), salience=-998)
    def language(self, language):
        self.language = language
